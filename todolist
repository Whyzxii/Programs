using System;
using System.Collections.Generic;
using System.IO;

namespace ToDoListConsoleApp
{
    class Program
    {
        static List<string> tasks = new List<string>();
        static string filePath = "tasks.txt";

        static void Main(string[] args)
        {
            LoadTasks();
            string command = "";

            Console.WriteLine("Welcome to the To-Do List App!");
            Console.WriteLine("Available commands: add, remove, view, complete, clear, exit");

            while (command != "exit")
            {
                Console.Write("Enter a command: ");
                command = Console.ReadLine().ToLower();

                switch (command)
                {
                    case "add":
                        AddTask();
                        break;

                    case "remove":
                        RemoveTask();
                        break;

                    case "view":
                        ViewTasks();
                        break;

                    case "complete":
                        CompleteTask();
                        break;

                    case "clear":
                        ClearTasks();
                        break;

                    case "exit":
                        SaveTasks();
                        Console.WriteLine("Exiting the application. Goodbye!");
                        break;

                    default:
                        Console.WriteLine("Unknown command. Please try again.");
                        break;
                }
            }
        }

        static void AddTask()
        {
            Console.Write("Enter a task: ");
            string task = Console.ReadLine();
            if (!string.IsNullOrWhiteSpace(task))
            {
                tasks.Add(task);
                Console.WriteLine($"Task '{task}' added.");
            }
            else
            {
                Console.WriteLine("Task cannot be empty.");
            }
        }

        static void RemoveTask()
        {
            Console.Write("Enter the task number to remove: ");
            if (int.TryParse(Console.ReadLine(), out int taskNumber) && taskNumber > 0 && taskNumber <= tasks.Count)
            {
                string removedTask = tasks[taskNumber - 1];
                tasks.RemoveAt(taskNumber - 1);
                Console.WriteLine($"Task '{removedTask}' removed.");
            }
            else
            {
                Console.WriteLine("Invalid task number.");
            }
        }

        static void ViewTasks()
        {
            if (tasks.Count == 0)
            {
                Console.WriteLine("No tasks available.");
                return;
            }

            Console.WriteLine("Your tasks:");
            for (int i = 0; i < tasks.Count; i++)
            {
                Console.WriteLine($"{i + 1}. {tasks[i]}");
            }
        }

        static void CompleteTask()
        {
            Console.Write("Enter the task number to mark as completed: ");
            if (int.TryParse(Console.ReadLine(), out int taskNumber) && taskNumber > 0 && taskNumber <= tasks.Count)
            {
                string completedTask = tasks[taskNumber - 1];
                tasks[taskNumber - 1] = $"[Completed] {completedTask}";
                Console.WriteLine($"Task '{completedTask}' marked as completed.");
            }
            else
            {
                Console.WriteLine("Invalid task number.");
            }
        }

        static void ClearTasks()
        {
            tasks.Clear();
            Console.WriteLine("All tasks cleared.");
        }

        static void LoadTasks()
        {
            if (File.Exists(filePath))
            {
                tasks.AddRange(File.ReadAllLines(filePath));
                Console.WriteLine("Tasks loaded from file.");
            }
        }

        static void SaveTasks()
        {
            File.WriteAllLines(filePath, tasks);
            Console.WriteLine("Tasks saved to file.");
        }
    }
}
